image: Visual Studio 2017

version: 18.2.1.{build}

pull_requests:
  do_not_increment_build_number: true

skip_branch_with_pr: true

configuration: Release

environment:
  release_zip: teamscale-profiler-dotnet_v$(appveyor_build_version).zip

before_build:
  - cmd: nuget restore
  # Patch C++ Version Info
  - ps: (Get-Content Profiler/version.h) | ForEach-Object { $_.Replace("1.0.0.0", $env:APPVEYOR_BUILD_VERSION).Replace("1,0,0,0", $env:APPVEYOR_BUILD_VERSION.Replace(".", ",").Split("-")[0]) } | Set-Content Profiler/version.h

build_script:
  - cmd: msbuild Cqse.Teamscale.Profiler.Dotnet.sln /p:Platform=Win32 /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - cmd: msbuild Cqse.Teamscale.Profiler.Dotnet.sln /p:Platform=x64 /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

test_script:
  - ps: $results = (Resolve-Path . ).Path + "test_results.xml"
  - ps: dotnet test Profiler_Test/Profiler_Test.csproj -c $env:Configuration --no-build --no-restore --logger="trx;LogFileName=$results"
  - ps: $wc = New-Object System.Net.WebClient
  - ps: $wc.UploadFile("https://ci.appveyor.com/api/testresults/mstest/$($env:APPVEYOR_JOB_ID)", $results)
  - ps: dotnet test Uploader_Test/Uploader_Test.csproj -c $env:Configuration --no-build --no-restore --logger="trx;LogFileName=$results"
  - ps: $wc.UploadFile("https://ci.appveyor.com/api/testresults/mstest/$($env:APPVEYOR_JOB_ID)", $results)

after_test:
  # Convert GitHub Wiki to PDF
  - cmd: git clone --depth=5 https://github.com/cqse/teamscale-profiler-dotnet.wiki.git wiki
  - cmd: npm install -g github-wikito-converter
  - cmd: curl -L https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_msvc2015-win64.exe --output wkhtmltox.exe
  - cmd: wkhtmltox.exe /S /D=C:\wkhtmltox
  - cmd: set PATH=%PATH%;C:\wkhtmltox\bin
  - cmd: sc start spooler # ensure the printer service is running for generating the PDF
  - cmd: wkhtmltopdf -V
  - cmd: gwtc -v --css wiki/export.css -t "Teamscale Ephemeral .NET Profiler" -f pdf wiki
  # Create release zip with profiler & documentation
  - cmd: mkdir teamscale_dotnet_profiler\Uploader
  - cmd: mkdir teamscale_dotnet_profiler\Documentation
  # robocopy sets weird exit codes (codes != 0 that still signal success) so we need to ignore them
  # c.f. https://superuser.com/questions/280425/getting-robocopy-to-return-a-proper-exit-code#346112
  # we achieve this by following up the robocopy commands with a command that sets sane exit codes
  # appveyor only cares about the last command
  - cmd: >-
      robocopy .\Profiler\bin\Release teamscale_dotnet_profiler *.dll

      robocopy .\Uploader\bin\Release teamscale_dotnet_profiler\Uploader Uploader.* *.dll *.xml *.json *.config /xf *.pdb

      robocopy . teamscale_dotnet_profiler/Documentation documentation.pdf

      7z a %release_zip% .\teamscale_dotnet_profiler

artifacts:
  - path: $(release_zip)
    name: profiler

deploy:
  - provider: GitHub
    auth_token:
      secure: zewFCJVMsIobb85iuyXSs0UbTgh53yZzNJK8KNOl+3W+MfkaUoe4BGOLE+fuQ9WJ
    release: $(APPVEYOR_REPO_TAG_NAME)
    artifact: $(release_zip)
    description: Release v$(appveyor_build_version)
    draft: true
    prerelease: false
    on:
      branch: master
      appveyor_repo_tag: true 

# Enable RDP
init:
  - ps: if ($env:RDP -eq "true") {iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))}
on_finish:
  - ps: if ($env:RDP -eq "true") {$blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))}

