image: Visual Studio 2017

version: 19.2.0.{build}

pull_requests:
  do_not_increment_build_number: true

skip_branch_with_pr: true

configuration: Release

assembly_info:
  patch: true
  file: AssemblyInfo.cs
  assembly_version: $(appveyor_build_version)
  assembly_file_version: $(appveyor_build_version)

environment:
  release_zip: teamscale-profiler-dotnet_v$(appveyor_build_version).zip

before_build:
  - cmd: nuget restore
  # Patch C++ Version Info
  - ps: (Get-Content Profiler/version.h) | ForEach-Object { $_.Replace("1.0.0.0", $env:APPVEYOR_BUILD_VERSION).Replace("1,0,0,0", $env:APPVEYOR_BUILD_VERSION.Replace(".", ",").Split("-")[0]) } | Set-Content Profiler/version.h

build_script:
  - cmd: msbuild Cqse.Teamscale.Profiler.Dotnet.sln /p:Platform=Win32 /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - cmd: msbuild Cqse.Teamscale.Profiler.Dotnet.sln /p:Platform=x64 /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

test_script:
  - ps: >
      vstest.console /parallel /logger:Appveyor
      Profiler_Cpp_Test/bin/Release/x86/Profiler_Cpp_Test.dll
      Profiler_Test/bin/Release/Profiler_Test.dll
      ProfilerGUI_Test/bin/Release/ProfilerGUI_Test.dll
      UploadDaemon_Test/bin/Release/UploadDaemon_Test.dll

after_test:
  # Convert documentation
  - cmd: npm install markdown-pdf
  - cmd: node_modules\.bin\markdown-pdf -c documentation -s documentation/pdf.css -f A4 documentation/userguide.md
  # Create release zip with profiler & documentation
  - cmd: mkdir teamscale_dotnet_profiler\UploadDaemon
  - cmd: mkdir teamscale_dotnet_profiler\GUI
  - cmd: mkdir teamscale_dotnet_profiler\Documentation
  - cmd: mkdir teamscale_dotnet_profiler\Licenses
  # robocopy sets weird exit codes (codes != 0 that still signal success) so we need to ignore them
  # c.f. https://superuser.com/questions/280425/getting-robocopy-to-return-a-proper-exit-code#346112
  # we achieve this by following up the robocopy commands with "exit 0"
  - cmd: robocopy .\Profiler\bin\Release teamscale_dotnet_profiler *.dll *.pdb & exit 0
  - cmd: robocopy .\Profiler teamscale_dotnet_profiler Profiler.example.yml & exit 0
  - cmd: robocopy . teamscale_dotnet_profiler LICENSE & exit 0
  - cmd: robocopy .\Profiler\lib teamscale_dotnet_profiler\Licenses LICENSE /s & exit 0
  - cmd: robocopy .\UploadDaemon\bin\Release teamscale_dotnet_profiler\UploadDaemon *.* /xf *.pdb & exit 0
  - cmd: robocopy .\ProfilerGUI\bin\Release teamscale_dotnet_profiler\GUI *.* /xf *.pdb & exit 0
  - cmd: robocopy .\documentation teamscale_dotnet_profiler/Documentation userguide.pdf & exit 0
  - cmd: 7z a %release_zip% .\teamscale_dotnet_profiler

artifacts:
  - path: $(release_zip)
    name: profiler

deploy:
  - provider: GitHub
    auth_token:
      secure: zewFCJVMsIobb85iuyXSs0UbTgh53yZzNJK8KNOl+3W+MfkaUoe4BGOLE+fuQ9WJ
    release: $(APPVEYOR_REPO_TAG_NAME)
    artifact: $(release_zip)
    description: Release v$(appveyor_build_version)
    draft: true
    prerelease: false
    on:
      branch: master
      appveyor_repo_tag: true 

# Enable RDP
init:
  - ps: if ($env:RDP -eq "true") {iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))}
on_finish:
  - ps: if ($env:RDP -eq "true") {$blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))}

